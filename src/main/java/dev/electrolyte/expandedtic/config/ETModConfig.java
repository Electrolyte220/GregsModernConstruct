package dev.electrolyte.expandedtic.config;

import dev.electrolyte.expandedtic.ExpandedTiC;
import dev.toma.configuration.config.Config;
import dev.toma.configuration.config.Configurable;
import dev.toma.configuration.config.UpdateRestrictions;

@Config(id = ExpandedTiC.MOD_ID)
public final class ETModConfig {

    @Configurable
    @Configurable.Comment({"Configuration related to GT material generation.", "The following configuration options ONLY affect GT materials generated by this mod, due to the way they are generated.", "Non-gt materials HAVE NO EFFECT HERE."})
    @Configurable.Synchronized
    @Configurable.UpdateRestriction(UpdateRestrictions.MAIN_MENU)
    public GTMaterialGeneration gtMaterialGeneration = new GTMaterialGeneration();
    public static class GTMaterialGeneration {

        @Configurable
        @Configurable.Comment({"Should the mod generate tinker's parts for GT materials that have a tool property?", "Must have GT installed"})
        public boolean enableGTIntegration = true;

        @Configurable
        @Configurable.Comment("GT Materials to ignore generating tinker's material information for")
        public String[] ignoredGTMaterials = new String[] {
                "bronze", "cobalt", "copper", "diamond", "flint", "invar", "iron", "netherite", "polybenzimidazole", "polyethylene", "polytetrafluoroethylene", "rose_gold", "rubber", "steel", "silicone_rubber", "styrene_butadiene_rubber", "wood"
        };

        @Configurable
        @Configurable.Comment("Generate extruder recipes for tinker's parts made from GT materials?")
        public boolean generateExtruderRecipes = true;

        @Configurable
        @Configurable.Comment("Generate fluid solidifier recipes for tinker's parts made from GT materials?")
        public boolean generateFluidSolidificationRecipes = false;

        @Configurable
        @Configurable.Comment({"Disable default material definition for the following GT materials", "Useful if you want to change the default material definition for a specific material."})
        public String[] ignoredDefaultMatDefGen = new String[]{};

        @Configurable
        @Configurable.Comment({"Disable default material stats for the following GT materials", "Useful if you want to change the default material stats for a specific material."})
        public String[] ignoredDefaultMatStatsGen = new String[]{};

        @Configurable
        @Configurable.Comment({"Disable default material traits for the following GT materials", "Useful if you want to change the default material traits for a specific material."})
        public String[] ignoredDefaultMatTraitsGen = new String[]{};

        @Configurable
        @Configurable.Comment("Global Modifiers for head materials")
        public HeadModifiers headModifiers = new HeadModifiers();

        public static class HeadModifiers {
            @Configurable
            @Configurable.Comment("Global Head durability modifier")
            public float headDurabilityModifier = 1.0f;

            @Configurable
            @Configurable.Comment("Global Head mining speed modifier")
            public float headMiningSpeedModifier = 1.0f;

            @Configurable
            @Configurable.Comment("Global Head attack damage modifier")
            public float headAttackDamageModifier = 1.0f;
        }

        @Configurable
        @Configurable.Comment("Global Modifiers for limb materials")
        public LimbModifiers limbModifiers = new LimbModifiers();

        public static class LimbModifiers {
            @Configurable
            @Configurable.Comment("Global Limb durability modifier")
            public float limbDurabilityModifier = 1.0f;

            @Configurable
            @Configurable.Comment("Global Limb draw speed modifier")
            public float limbDrawSpeedModifier = 0.001f;

            @Configurable
            @Configurable.Comment("Global Limb velocity modifier")
            public float limbVelocityModifier = 0.0008f;

            @Configurable
            @Configurable.Comment("Global Limb accuracy modifier")
            public float limbAccuracyModifier = 0.0005f;
        }

        @Configurable
        @Configurable.Comment("Global Modifiers for grip materials")
        public GripModifiers gripModifiers = new GripModifiers();

        public static class GripModifiers {
            @Configurable
            @Configurable.Comment("Global Grip durability modifier")
            public float gripDurabilityModifier = 0.2f;

            @Configurable
            @Configurable.Comment("Global Grip accuracy modifier")
            public float gripAccuracyModifier = 0.16f;

            @Configurable
            @Configurable.Comment("Global Grip melee damage modifier")
            public float gripMeleeDamageModifier = 1.5f;
        }

        @Configurable
        @Configurable.Comment("Global Modifiers for handle materials")
        public HandleModifiers handleModifiers = new HandleModifiers();

        public static class HandleModifiers {
            @Configurable
            @Configurable.Comment("Global Handle durability modifier")
            @Configurable.DecimalRange(min = 0.1f)
            public float handleDurabilityModifier = 1.0f;

            @Configurable
            @Configurable.Comment("Global Handle mining speed modifier")
            @Configurable.DecimalRange(min = 0.1f)
            public float handleMiningSpeedModifier = 1.0f;

            @Configurable
            @Configurable.Comment("Global Handle attack damage modifier")
            @Configurable.DecimalRange(min = 0.1f)
            public float handleAttackDamageModifier = 1.0f;

            @Configurable
            @Configurable.Comment("Global Handle attack speed modifier")
            @Configurable.DecimalRange(min = 0.1f)
            public float handleAttackSpeedModifier = 1.0f;
        }
    }
}
